<?xml version="1.0" encoding="utf-8"?>
<odoo>
    <record id="l10n_lu_employees_atn_transport_without_VAT" model="hr.salary.rule">
        <field name="category_id" ref="l10n_lu_hr_payroll.hr_salary_rule_category_bik"/>
        <field name="name">Benefit in Kind (Transportation) without VAT</field>
        <field name="code">BIK_TRANSPORT_NO_VAT</field>
        <field name="sequence">5</field>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
result_rate = 1/(1 + payslip._rule_parameter('l10n_vat_rate'))
result = contract.l10n_lu_atn_transport
        </field>
        <field name="struct_id" ref="l10n_lu_hr_payroll.hr_payroll_structure_lux_employee_salary"/>
    </record>

    <record id="l10n_lu_employees_atn_transport_VAT" model="hr.salary.rule">
        <field name="category_id" ref="l10n_lu_hr_payroll.hr_salary_rule_category_bik"/>
        <field name="name">Benefit in Kind (Transportation) VAT</field>
        <field name="code">BIK_TRANSPORT_VAT</field>
        <field name="sequence">10</field>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
result_rate = 1 - (1/(1 + payslip._rule_parameter('l10n_vat_rate')))
result = contract.l10n_lu_atn_transport
        </field>
        <field name="struct_id" ref="l10n_lu_hr_payroll.hr_payroll_structure_lux_employee_salary"/>
    </record>

    <record id="l10n_lu_employees_gross_tmp" model="hr.salary.rule">
        <field name="category_id" ref="l10n_lu_hr_payroll.hr_salary_rule_category_gross_tmp"/>
        <field name="name">Temporary Gross</field>
        <field name="code">T_GROSS</field>
        <field name="sequence">15</field>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="appears_on_payslip" eval="False"/>
        <field name="amount_python_compute">
result = categories['BASIC'] + categories['BIK']
        </field>
        <field name="struct_id" ref="l10n_lu_hr_payroll.hr_payroll_structure_lux_employee_salary"/>
    </record>

    <record id="l10n_lu_employees_gross_meal_vouchers" model="hr.salary.rule">
        <field name="category_id" ref="hr_payroll.BASIC"/>
        <field name="name">Meal Vouchers</field>
        <field name="code">MEAL_VOUCHERS</field>
        <field name="sequence">20</field>
        <field name="condition_select">python</field>
        <field name="condition_python">result = bool(contract.l10n_lu_meal_voucher_amount)</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
if 'WORK100' not in worked_days:
    result_qty = 0
elif worked_days['WORK100'].number_of_days >= 18:
    result_qty = 18
else:
    total_number_of_days = sum(payslip.worked_days_line_ids.mapped('number_of_days'))
    result_qty = int(18 * worked_days['WORK100'].number_of_days / total_number_of_days)
result = 2.8
        </field>
        <field name="struct_id" ref="l10n_lu_hr_payroll.hr_payroll_structure_lux_employee_salary"/>
    </record>

    <function model="hr.salary.rule" name="write">
        <value model="hr.salary.rule" search="[
            ('struct_id', '=', ref('l10n_lu_hr_payroll.hr_payroll_structure_lux_employee_salary')),
            ('code', '=', 'GROSS')]"/>
        <value eval="{
            'amount_python_compute': &quot;result = result_rules['T_GROSS']['total'] + result_rules['MEAL_VOUCHERS']['total']&quot;}"/>
    </function>

    <record id="l10n_lu_employees_health_fund" model="hr.salary.rule">
        <field name="category_id" ref="hr_payroll.DED"/>
        <field name="name">Health Fund</field>
        <field name="code">HEALTH_FUND</field>
        <field name="sequence">105</field>
        <field name="condition_select">none</field>
        <field name="amount_select">percentage</field>
        <field name="amount_percentage_base">T_GROSS</field>
        <field name="amount_percentage">-2.8</field>
        <field name="struct_id" ref="l10n_lu_hr_payroll.hr_payroll_structure_lux_employee_salary"/>
    </record>

    <record id="l10n_lu_employees_cash_sickness_fund" model="hr.salary.rule">
        <field name="category_id" ref="hr_payroll.DED"/>
        <field name="name">Cash Sickness Fund</field>
        <field name="code">SICK_FUND</field>
        <field name="sequence">110</field>
        <field name="condition_select">none</field>
        <field name="amount_select">percentage</field>
        <field name="amount_percentage_base">BASIC</field>
        <field name="amount_percentage">-0.25</field>
        <field name="struct_id" ref="l10n_lu_hr_payroll.hr_payroll_structure_lux_employee_salary"/>
    </record>

    <record id="l10n_lu_employees_retirement_fund" model="hr.salary.rule">
        <field name="category_id" ref="hr_payroll.DED"/>
        <field name="name">Retirement Fund</field>
        <field name="code">RETIREMENT_FUND</field>
        <field name="sequence">115</field>
        <field name="condition_select">none</field>
        <field name="amount_select">percentage</field>
        <field name="amount_percentage_base">T_GROSS</field>
        <field name="amount_percentage">-8.0</field>
        <field name="struct_id" ref="l10n_lu_hr_payroll.hr_payroll_structure_lux_employee_salary"/>
    </record>

    <record id="l10n_lu_employees_dependency_insurance" model="hr.salary.rule">
    <field name="category_id" ref="hr_payroll.DED"/>
    <field name="name">Dependency Insurance</field>
    <field name="code">DEP_INS</field>
    <field name="sequence">120</field>
    <field name="condition_select">none</field>
    <field name="amount_select">code</field>
    <field name="amount_python_compute">
min_social_pay = payslip._rule_parameter('l10n_lu_min_social_pay')
result = -0.014 * (contract.wage + categories['BIK'] - min_social_pay/4)
    </field>
    <field name="struct_id" ref="l10n_lu_hr_payroll.hr_payroll_structure_lux_employee_salary"/>
</record>

    <record id="l10n_lu_employees_taxes_total" model="hr.salary.rule">
        <field name="category_id" ref="l10n_lu_hr_payroll.hr_salary_rule_category_taxes_data"/>
        <field name="name">Total Taxes</field>
        <field name="code">TAXES_TOTAL</field>
        <field name="sequence">125</field>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
result = -(result_rules['HEALTH_FUND']['total'] + result_rules['SICK_FUND']['total'] + result_rules['RETIREMENT_FUND']['total'])
</field>
        <field name="struct_id" ref="l10n_lu_hr_payroll.hr_payroll_structure_lux_employee_salary"/>
    </record>

    <record id="l10n_lu_employees_transport_fees" model="hr.salary.rule">
        <field name="category_id" ref="hr_payroll.ALW"/>
        <field name="name">Transport Fees</field>
        <field name="code">TRANS_FEES</field>
        <field name="sequence">130</field>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
result = contract.employee_id.l10n_lu_travel_expense
</field>
        <field name="struct_id" ref="l10n_lu_hr_payroll.hr_payroll_structure_lux_employee_salary"/>
    </record>

    <record id="l10n_lu_employees_total_allowance" model="hr.salary.rule">
        <field name="category_id" ref="l10n_lu_hr_payroll.hr_salary_rule_category_total_allowance"/>
        <field name="name">Total Allowances</field>
        <field name="code">ALW_TOTAL</field>
        <field name="sequence">135</field>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
result = - result_rules['TRANS_FEES']['total']
</field>
        <field name="struct_id" ref="l10n_lu_hr_payroll.hr_payroll_structure_lux_employee_salary"/>
    </record>

    <record id="l10n_lu_employees_taxable_amount" model="hr.salary.rule">
        <field name="category_id" ref="l10n_lu_hr_payroll.hr_salary_rule_category_taxable_amount"/>
        <field name="name">Taxable Amount</field>
        <field name="code">TAXABLE</field>
        <field name="sequence">140</field>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
result = GROSS - result_rules['TAXES_TOTAL']['total'] + result_rules['ALW_TOTAL']['total'] + result_rules['DEP_INS']['total']
        </field>
        <field name="struct_id" ref="l10n_lu_hr_payroll.hr_payroll_structure_lux_employee_salary"/>
    </record>

    <record id="l10n_lu_employees_withholding_taxes" model="hr.salary.rule">
        <field name="category_id" ref="hr_payroll.DED"/>
        <field name="name">Withholding Taxes</field>
        <field name="code">TAXES</field>
        <field name="sequence">140</field>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
result = payslip._get_lux_tax(localdict)
</field>
        <field name="struct_id" ref="l10n_lu_hr_payroll.hr_payroll_structure_lux_employee_salary"/>
    </record>

    <record id="l10n_lu_employees_employee_tax_credit" model="hr.salary.rule">
        <field name="category_id" ref="hr_payroll.ALW"/>
        <field name="name">Employee Tax Credit</field>
        <field name="code">TAX_CREDIT</field>
        <field name="sequence">150</field>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
def find_rates(x, rates):
    for low, high, base, to_substruct, multiplier in rates:
        if low &lt;= x &lt;= float(high):
            return base, to_substruct, multiplier

yearly_salary = GROSS * 12
if yearly_salary:
    tax_credit_bracket = payslip._rule_parameter('l10n_tax_credit')
    base, to_substruct, multiplier = find_rates(yearly_salary, tax_credit_bracket)
    result = (base + (yearly_salary + to_substruct) * multiplier) / 12
else:
    result = 0
        </field>
        <field name="struct_id" ref="l10n_lu_hr_payroll.hr_payroll_structure_lux_employee_salary"/>
    </record>

    <function model="hr.salary.rule" name="write">
        <value model="hr.salary.rule" search="[
            ('struct_id', '=', ref('l10n_lu_hr_payroll.hr_payroll_structure_lux_employee_salary')),
            ('code', '=', 'NET')]"/>
        <value eval="{
            'amount_python_compute': &quot;result = categories['TAXABLE'] + result_rules['TAXES']['total'] + result_rules['TAX_CREDIT']['total']&quot;, 'appears_on_employee_cost_dashboard': True}"/>
    </function>

    <record id="l10n_lu_employees_gross_meal_vouchers_2" model="hr.salary.rule">
        <field name="category_id" ref="l10n_lu_hr_payroll.hr_salary_rule_category_ded_net"/>
        <field name="name">Meal Vouchers</field>
        <field name="code">MEAL_VOUCHERS.2</field>
        <field name="sequence">205</field>
        <field name="condition_select">python</field>
        <field name="condition_python">result = bool(contract.l10n_lu_meal_voucher_amount)</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
result_qty = result_rules['MEAL_VOUCHERS']['quantity']
result = -result_rules['MEAL_VOUCHERS']['amount']
        </field>
        <field name="struct_id" ref="l10n_lu_hr_payroll.hr_payroll_structure_lux_employee_salary"/>
    </record>

    <record id="l10n_lu_employees_atn_transport_without_VAT_2" model="hr.salary.rule">
        <field name="category_id" ref="l10n_lu_hr_payroll.hr_salary_rule_category_ded_net"/>
        <field name="name">Benefit in Kind (Transportation) without VAT</field>
        <field name="code">BIK_TRANSPORT_NO_VAT.2</field>
        <field name="sequence">210</field>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
result_qty = result_rules['BIK_TRANSPORT_NO_VAT']['quantity']
result = -result_rules['BIK_TRANSPORT_NO_VAT']['total']
        </field>
        <field name="struct_id" ref="l10n_lu_hr_payroll.hr_payroll_structure_lux_employee_salary"/>
    </record>

    <record id="l10n_lu_employees_atn_transport_VAT_2" model="hr.salary.rule">
        <field name="category_id" ref="l10n_lu_hr_payroll.hr_salary_rule_category_ded_net"/>
        <field name="name">Benefit in Kind (Transportation) VAT</field>
        <field name="code">BIK_TRANSPORT_VAT.2</field>
        <field name="sequence">215</field>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
result_qty = result_rules['BIK_TRANSPORT_VAT']['quantity']
result = -result_rules['BIK_TRANSPORT_VAT']['total']
        </field>
        <field name="struct_id" ref="l10n_lu_hr_payroll.hr_payroll_structure_lux_employee_salary"/>
    </record>

    <record id="l10n_lu_employees_benefit_various_2" model="hr.salary.rule">
        <field name="category_id" ref="l10n_lu_hr_payroll.hr_salary_rule_category_ded_net"/>
        <field name="name">Benefit in Kind (Various)</field>
        <field name="code">BIK_VARIOUS.2</field>
        <field name="sequence">218</field>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
result = -result_rules['BIK_VARIOUS']['total']
        </field>
        <field name="struct_id" ref="l10n_lu_hr_payroll.hr_payroll_structure_lux_employee_salary"/>
    </record>

    <record id="l10n_lu_employees_net_to_pay" model="hr.salary.rule">
        <field name="category_id" ref="hr_salary_rule_category_net_to_pay"/>
        <field name="name">Net To Pay</field>
        <field name="code">NET_TO_PAY</field>
        <field name="sequence">220</field>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
result = result_rules['NET']['total'] + categories['DED_NET']
        </field>
        <field name="struct_id" ref="l10n_lu_hr_payroll.hr_payroll_structure_lux_employee_salary"/>
    </record>
</odoo>

